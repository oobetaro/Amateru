/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DictionaryDialog.java
 *
 * Created on 2009/01/31, 17:26:48
 */

package to.tetramorph.starbase.dict;

import to.tetramorph.starbase.util.Dictionary;
import java.awt.Frame;
import java.awt.event.ActionEvent;
import java.util.List;
import javax.swing.AbstractAction;
import javax.swing.JMenu;
import to.tetramorph.starbase.util.DictionaryRequest;
import to.tetramorph.starbase.util.WindowMoveHandler;
import to.tetramorph.util.ParentWindow;

/**
 * 外部クラスから辞書ダイアログにアクセスするときのエントリークラス。
 * <pre>
 * Dictionary dictionary = DictionaryDialog.createInstance(frame, table);
 * </pre>
 * @author 大澤義鷹
 */
public final class DictionaryDialog extends javax.swing.JDialog
                                   implements Dictionary {
    ViewerPanel panel;
    private DictionaryDialog() { }
    /** Creates new form DictionaryDialog */

    private DictionaryDialog(java.awt.Frame parent) {
        super(parent, false);
        initComponents();
        panel = new ViewerPanel();
        add( panel );
        menuBar.removeAll();
        JMenu fileMenu = panel.getFileMenu();
        fileMenu.add(exitMenuItem);
        menuBar.add(fileMenu);
        menuBar.add(panel.getEditMenu());
        ParentWindow.setEscCloseOperation( this, new AbstractAction() {
            @Override
            public void actionPerformed(ActionEvent evt) {
                exitMenuItemActionPerformed(null);
            }
        });
        setLocationRelativeTo(null);
        WindowMoveHandler winmove =
            new WindowMoveHandler("DictDialog.BOUNDS", this);
        addComponentListener(winmove);
        pack();
        winmove.setBounds(); // packの後にしないと位置がずれる
        panel.getSplitPane().setDividerLocation(0.35);
    }

    private static DictionaryDialog dialog;


    @Override
    public void setVisible(boolean b) {
        if ( b == true ) {
            super.setVisible(true);
            toFront();
        } else {
            super.setVisible(false);
        }
    }
    /**
     * このクラスはシングルインスタンスで、コンストラクタを呼び出すかわりに、
     * このメソッドで初期化する。EDTから呼び出すこと。
     * @param owner 親Frameのインスタンスを指定する。
     * @param table 辞書テーブル（チャートモジュールごとに異なる辞書テーブルが
     * 用意されうる）。
     */
    public static Dictionary createInstance( Frame owner,
                                                 DictTable table ) {
        if ( dialog == null ) {
            Config.load();
            Librarian lib = Librarian.getInstance();
            lib.loadBooks( table );
            dialog = new DictionaryDialog( owner );
        } else {
            throw new java.lang.IllegalStateException("再呼びだしは不可");
        }
        return dialog;
    }

    @Override
    public void search(DictionaryRequest req ) {
        System.out.println("アマテルから問い合わせ");
        System.out.println("dictType = " + req.getDictType());
        System.out.println("caption = " + req.getCaption() );
        System.out.println("action = " + req.getActionCommand());
        List<DictNode> node = Librarian.getInstance().search(req);
        panel.writePages(req.getCaption(),node);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exitMenuItem = new javax.swing.JMenuItem();
        menuBar = new javax.swing.JMenuBar();
        dummyMenu = new javax.swing.JMenu();
        dummyMenu2 = new javax.swing.JMenu();

        exitMenuItem.setText("閉じる");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("アマテル辞書");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        dummyMenu.setText("ファイル(F)");
        menuBar.add(dummyMenu);

        dummyMenu2.setText("編集(E)");
        menuBar.add(dummyMenu2);

        setJMenuBar(menuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        Librarian.getInstance().confirmSaveOrReloadBooks();
        panel.clearHistory();
        Config.save();
        dispose();

    }//GEN-LAST:event_exitMenuItemActionPerformed
    //×ボタンが押されたとき
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        exitMenuItemActionPerformed(null);
    }//GEN-LAST:event_formWindowClosing


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu dummyMenu;
    private javax.swing.JMenu dummyMenu2;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenuBar menuBar;
    // End of variables declaration//GEN-END:variables



}
