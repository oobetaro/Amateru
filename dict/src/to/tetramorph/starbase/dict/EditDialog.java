/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EditDialog.java
 *
 * Created on 2008/12/19, 1:25:42
 */

package to.tetramorph.starbase.dict;

import java.awt.BorderLayout;
import java.awt.Component;
import java.awt.Dialog;
import java.awt.Window;
import java.awt.event.ActionEvent;
import javax.swing.AbstractAction;
import javax.swing.JPanel;
import javax.swing.tree.TreePath;
import to.tetramorph.util.ParentWindow;

/**
 * ページ編集用のダイアログ
 * @author 大澤義鷹
 */
class EditDialog extends javax.swing.JDialog {
    private ActionSelectionPanel actionPanel;
    private DictNode node;
    private TreePath treePath;
    private static EditDialog dialog;
    private DictNode resultNode;
    /** Creates new form EditDialog */
    private EditDialog( Window parent ) {
        super( parent, Dialog.ModalityType.DOCUMENT_MODAL );
        initComponents();
        ParentWindow.setEscCloseOperation( this, new AbstractAction() {
            public void actionPerformed(ActionEvent evt) {
                dispose();
                resultNode = null;
            }
        });
        pack();
    }

    /**
     * アクションパラメターを指定するパネルをセットする。
     */
    private void setParamPanel( JPanel p ) {
        Component c = ((BorderLayout)headderPanel.getLayout()).
                getLayoutComponent(BorderLayout.CENTER);
        if ( c != null ) headderPanel.remove(c);
        if ( p == null ) return;
        headderPanel.add( p, BorderLayout.CENTER );
        validate();
        repaint();
    }

//    /**
//     * 新規登録か更新かのモードをセットする。ボタンのタイトルが変わる他、
//     * ツリーパスのフィールドが編集不可になったりする。
//     * @param mode INSERT_MODEかUPDATE_MODEかのどちらかを指定。
//     */
//    private void changeMode( int mode ) {
//        if ( mode == INSERT_MODE ) {
//            acceptButton.setText("登録(Y)");
//        } else if ( mode == UPDATE_MODE ) {
//            acceptButton.setText("更新(Y)");
//        } else {
//            throw new IllegalArgumentException("未定義のモード");
//        }
//    }

    /**
     * 編集するページノードをこのダイアログにセットする。
     */
    private void setTreePath( TreePath treePath ) {
        this.treePath = treePath;
        this.node = TreeUtils.getDictNode(treePath);
        //アクション選択パネルを作成
        Book book = Librarian.getInstance().getBook(treePath);
        actionPanel = new ActionSelectionPanel(book);
        setParamPanel( actionPanel );

        actionPanel.setParams(node);
        textPane.setText(node.getBody());
        String path = node.getPathString();
        int i =  path.lastIndexOf("/") + 1;
        String title = path.substring(i);
        path = path.substring(0,i);
        titleTextField.setText( title );
        pathTextField.setText( path );
    }

//    /**
//     * setTreePathでセットされたノードに、このダイアログのフォーム内容を書きこむ。
//     * そしてDefaultTreeModel#nodeChagedを呼び出し、更新をDictTreeに反映させ、
//     * ブックファイルを上書き保存する。
//     */
//    private void writeNodeFromForm() {
//        actionPanel.getParams(node);
//        node.setBody(textPane.getText().trim());
//        node.setUserObject(titleTextField.getText().trim());
//        Librarian.getInstance().getDefaultTreeModel().nodeChanged(node);
//        Librarian.getInstance().saveBook(treePath);
//    }
//
//    private DictNode getUpdateNode() {
//        DictNode n = actionPanel.getNewPage(titleTextField.getText().trim()); //空文字検査を入れたほうが良い。まだ未対応。
//        n.setBody(textPane.getText().trim());
//        return n;
//    }
    /**
     * 編集ダイアログを開く。
     * 編集用のダイアログの初期値のサイズは親ウィンドウのサイズと同じだが、
     * 二回目以降はユーザがリサイズした大きさとなる。
     * @param parent 親のウィンドウ
     * @param model  ツリーモデル
     * @param path   編集しようとしてるページのパス
     * @return 登録ボタンが押されたときは更新内容を反映した新しいノードを返す。
     * 中止ボタンが押されたときはnullを返す。
     * @exception IllegalArgumentException pathがページではない場合。フォルダ
     * などを指しているとき。
     */
    public static DictNode showDialog( Window parent,
                                       TreePath path ) {
        DictNode node = TreeUtils.getDictNode(path);
        if ( ! node.isPage() )
            throw new IllegalArgumentException("ページではない");
        if ( dialog == null ) {
            dialog = new EditDialog( parent );
            dialog.setSize(parent.getSize());
        }
        //dialog.changeMode( mode );
        dialog.setTreePath( path );
        dialog.setLocationRelativeTo( parent );
        dialog.setVisible(true);
        return dialog.resultNode;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        headderPanel = new javax.swing.JPanel();
        javax.swing.JPanel jPanel5 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        pathTextField = new javax.swing.JTextField();
        titleTextField = new javax.swing.JTextField();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        acceptButton = new javax.swing.JButton();
        abortButton = new javax.swing.JButton();
        javax.swing.JScrollPane jScrollPane1 = new javax.swing.JScrollPane();
        textPane = new javax.swing.JTextPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("辞書ページの編集");
        getContentPane().setLayout(new java.awt.BorderLayout(0, 1));

        headderPanel.setLayout(new java.awt.BorderLayout(0, 1));

        jPanel5.setLayout(new java.awt.GridBagLayout());

        jLabel1.setText("章段落");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabel1, gridBagConstraints);

        pathTextField.setColumns(30);
        pathTextField.setEditable(false);
        pathTextField.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel5.add(pathTextField, gridBagConstraints);

        titleTextField.setColumns(30);
        titleTextField.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(0, 6, 0, 0);
        jPanel5.add(titleTextField, gridBagConstraints);

        jLabel2.setText("タイトル");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel5.add(jLabel2, gridBagConstraints);

        headderPanel.add(jPanel5, java.awt.BorderLayout.PAGE_END);

        getContentPane().add(headderPanel, java.awt.BorderLayout.NORTH);

        acceptButton.setText("登録(Y)");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        jPanel1.add(acceptButton);

        abortButton.setText("中止(N)");
        abortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortButtonActionPerformed(evt);
            }
        });
        jPanel1.add(abortButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.PAGE_END);

        textPane.setText("本文");
        jScrollPane1.setViewportView(textPane);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void abortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortButtonActionPerformed
        this.resultNode = null;
        dispose();
    }//GEN-LAST:event_abortButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        this.resultNode = actionPanel.getNewPage(titleTextField.getText().trim()); //空文字検査を入れたほうが良い。まだ未対応。
        this.resultNode.setBody(textPane.getText().trim());
        //writeNodeFromForm();
        dispose();
    }//GEN-LAST:event_acceptButtonActionPerformed

//    DictPage getTestPage() {
//        DictPage page = new DictPage();
//        page.put("action","SelectedBody");
//        page.put("house","house1");
//        page.put("planet","sun");
//        page.put("sign","lib");
//        page.put("angle","6");
//        page.put("type","natal");
//        page.put("isRetrograde","false");
//        return page;
//    }
//    DictPage getTestPage2() {
//        DictPage page = new DictPage();
//        page.put("action","SelectedText");
//        page.put("keyword","ほげほげ");
//        return page;
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abortButton;
    private javax.swing.JButton acceptButton;
    private javax.swing.JPanel headderPanel;
    private javax.swing.JTextField pathTextField;
    private javax.swing.JTextPane textPane;
    private javax.swing.JTextField titleTextField;
    // End of variables declaration//GEN-END:variables

}
