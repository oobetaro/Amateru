/*
 * ReportSpecificPanel.java
 *
 * Created on 2008/10/25, 20:45
 */

package to.tetramorph.starbase.chartmodule;

import to.tetramorph.starbase.lib.AspectType;
import to.tetramorph.starbase.lib.Const;
import to.tetramorph.starbase.util.ChartConfig;
import to.tetramorph.starbase.widget.CustomizePanel;
import to.tetramorph.util.Preference;

/**
 * レポートプラグインの仕様設定パネル
 * @author  大澤義鷹
 */
public class ReportSpecificPanel extends CustomizePanel {
    //デフォルトのアスペクト設定 ( ｱｽﾍﾟｸﾄID,ﾀｲﾄｵｰﾌﾞ,ﾙｰｽﾞｵｰﾌﾞ )
    private static final String defaultAspects =
        "0,3,6," +  //CONJUNCTION
        "1,3,6," +   //SEXTILE
        "2,3,6," +   //SQUARE
        "3,3,6," +   //TRINE
        "4,3,6"  ;   //OPPOSITION
        //"5,3,6";    //QUINCUNX

    /** Creates new form ReportSpecificPanel */
    public ReportSpecificPanel() {
        initComponents();
        basicPlanetsSelectionPanel.setSlavePanel( planetsSelectionPanel2 );
        aspectTypePanel.setSelected( defaultAspects );
        basicPlanetsSelectionPanel.setModernSystem(true);
        basicPlanetsSelectionPanel.reset();
    }
    

    
    public Preference getPreference( Preference pref ) {
        String sys = new Boolean( basicPlanetsSelectionPanel.isModernSystem() ).toString();
        pref.setProperty( "isModern", sys );
        pref.setProperty( "NatalBodys", basicPlanetsSelectionPanel.getSelected() );
        pref.setProperty( "NatalAspectBodys", planetsSelectionPanel2.getSelected() );
        pref.setProperty( "AspectTypes", aspectTypePanel.getSelected() );
        pref.setProperty( "HouseSystemCode", "" +housePreferencePanel1.getHouseSystemCode());
        pref.setProperty( "CuspUnknownHouseSystem", housePreferencePanel1.getCuspUnkownHouseSystem() );
        pref.setProperty( "PrioritizeSolar", housePreferencePanel1.getPrioritizeSolar() );
        return pref;
    }
    
    public void setPreference( Preference pref ) {
        boolean b = pref.getProperty( "isModern","true" ).equals("true");
        basicPlanetsSelectionPanel.setModernSystem( b );
        basicPlanetsSelectionPanel.setSelected( pref.getProperty("NatalBodys") );
        planetsSelectionPanel2.setSelected( pref.getProperty("NatalAspectBodys") );
        aspectTypePanel.setSelected( pref.getProperty( "AspectTypes" ) );
        housePreferencePanel1.setHouseSystemCode( pref.getProperty("HouseSystemCode").charAt(0) );
        housePreferencePanel1.setCuspUnkownHouseSystem( pref.getProperty("CuspUnknownHouseSystem") );
        housePreferencePanel1.setPrioritizeSolar( pref.getProperty("PrioritizeSolar") );
    }
    
    public boolean isCorrect( String[] errmsg ) {
        AspectType [] atype = aspectTypePanel.getAspectTypes();
        for ( int i = 0; i < atype.length; i++ ) {
            if ( ( atype[i].tightOrb <= 0 || atype[i].looseOrb <= 0 ) ||
                 ( atype[i].tightOrb >= atype[i].looseOrb) ) {
                errmsg[0] = "アスペクト\"" + Const.ASPECT_NAMES[i] 
                          + "\"のオーブの設定値が未入力か異常です。";
                return false;
            }
        }
        return true;
    }
    
    /**
     * 選択されているネイタル天体IDsを返す。
     */
    public int [] getNatalBodyIDs() {
        return basicPlanetsSelectionPanel.getSelectedBodyIDs();
    }
    
    /**
     * ネイタルでアスペクトを検出する天体のIDsを返す。
     */
    public int [] getAspectNatalBodyIDs() {
        return planetsSelectionPanel2.getSelectedBodyIDs();
    }
    
    /**
     * アスペクトタイプの配列を返す。
     */
    public AspectType [] getAspectTypes() {
        return aspectTypePanel.getAspectTypes();
    }
    
    /**
     * モダン十惑星式が選択されているときはtrueを返す。
     */
    public boolean isModernSystem() {
        return this.basicPlanetsSelectionPanel.isModernSystem();
    }
    
    /**
     * カスプ計算できないときはハウス分割法をセットする。1か0を文字列でセット。
     */
    public void setCuspUnkownHouseSystem( String value ) {
        housePreferencePanel1.setCuspUnkownHouseSystem( value );        
    }
    
    /**
     * カスプが計算できないときのハウス分割法(ソーラーかソーラーサイン)コード
     * を帰す。
     */
    public char getCuspUnknownHouseSystem() {
        return housePreferencePanel1.getCuspUnkownHouseSystem().charAt(0);
    }
    
    /**
     * ハウス分割法をセットする
     */
    public void setHouseSystemCode( char code ) {
        housePreferencePanel1.setHouseSystemCode( code );
    }
    
    /**
     * 選択されているハウス分割法のスイスエフェメリス用のコードを返す。
     */
    public char getHouseSystemCode() {
        return housePreferencePanel1.getHouseSystemCode();
    }
    public boolean getPrioritizeSolar() {
        return housePreferencePanel1.getPrioritizeSolar().equals("true");
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        planetsSelectionPanel2 = new to.tetramorph.starbase.widget.PlanetsSelectionPanel();
        basicPlanetsSelectionPanel = new to.tetramorph.starbase.widget.BasicPlanetsSelectionPanel();
        jPanel2 = new javax.swing.JPanel();
        aspectTypePanel = new to.tetramorph.starbase.widget.AspectTypePanel();
        housePreferencePanel1 = new to.tetramorph.starbase.widget.HousePreferencePanel();

        setLayout(new java.awt.BorderLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        planetsSelectionPanel2.setTitle("\u30a2\u30b9\u30da\u30af\u30c8\u691c\u51fa\u5929\u4f53");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.insets = new java.awt.Insets(21, 0, 0, 0);
        jPanel1.add(planetsSelectionPanel2, gridBagConstraints);

        jPanel1.add(basicPlanetsSelectionPanel, new java.awt.GridBagConstraints());

        jTabbedPane1.addTab("\u5929\u4f53", jPanel1);

        jPanel2.setLayout(new java.awt.BorderLayout());

        aspectTypePanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(16, 16, 16, 16));
        jPanel2.add(aspectTypePanel, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("\u30a2\u30b9\u30da\u30af\u30c8", jPanel2);

        jTabbedPane1.addTab("\u30cf\u30a6\u30b9\u8a08\u7b97\u6cd5", housePreferencePanel1);

        add(jTabbedPane1, java.awt.BorderLayout.CENTER);

    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private to.tetramorph.starbase.widget.AspectTypePanel aspectTypePanel;
    private to.tetramorph.starbase.widget.BasicPlanetsSelectionPanel basicPlanetsSelectionPanel;
    private to.tetramorph.starbase.widget.HousePreferencePanel housePreferencePanel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private to.tetramorph.starbase.widget.PlanetsSelectionPanel planetsSelectionPanel2;
    // End of variables declaration//GEN-END:variables
    
    
}
