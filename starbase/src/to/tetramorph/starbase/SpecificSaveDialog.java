/*
 * SpecificSaveDialog.java
 *
 * Created on 2007/01/08, 19:28
 */

package to.tetramorph.starbase;

import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.util.Properties;
import java.util.Vector;
import javax.swing.AbstractAction;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import to.tetramorph.util.ParentWindow;

/**
 * 色設定情報を保存するときのダイアログ。設定名のリストを表示し、それらに対して
 * 上書き保存することもできるし、新しい名前を指定して保存することもできる。
 * @author  大澤義鷹
 */
final class SpecificSaveDialog extends JDialog {
  String type;
  Properties prop;
  static SpecificSaveDialog dialog;
  Vector<String> nameVector = new Vector<String>();
  String confName;
  ModuleCustomizer custom;
  private DB db = DBFactory.getInstance();
//  private String [] titles =
//        { "色設定の保存","計算設定の保存" };
  String tableName;
  /** 
   * @param parent 親フレーム
   * @param type チャートタイプ(フルクラス名)
   * @param prop プロパティ
   * @param confName 設定名
   */
  private SpecificSaveDialog( java.awt.Dialog parent,
                               String type,
                               Properties prop,
                               String confName,
                               ModuleCustomizer custom ) {
      super(parent, true);
      this.custom = custom;
      tableName = custom.getProperty("tableName");
      initComponents();
      this.type = type;
      this.prop = prop;
      this.confName = confName;
      setTitle( custom.getProperty("saveDialogTitle") );
      ParentWindow.setEscCloseOperation(this,new AbstractAction() {
          public void actionPerformed(ActionEvent evt) {
              cancelButton.doClick();
          }
      });
      db.getConfigNames( type, nameVector, tableName );
      jList.setListData(nameVector);
      nameTextField.setText(confName);
      for(int i=0; i<nameVector.size(); i++) {
          if(nameVector.get(i).equals(confName)) {
              jList.setSelectedIndex(i);
              break;
          }
      }
      pack();
      setLocationRelativeTo(parent);
  }

  /**
   * @param owner 親フレーム
   * @param type チャートタイプ名
   * @param colorProp DBに保存する色設定プロパティ
   * @return 保存されたときは保存名。中止されたときはnullを返す。
   */
  public static String showDialog( Dialog owner,
                                     String type,
                                     Properties colorProp,
                                     String confName,
                                     ModuleCustomizer custom) {
      dialog = new SpecificSaveDialog( owner, type, colorProp, confName, custom );
      dialog.setVisible(true);
      return dialog.confName;
  }
//  /**
//   * テスト。ｶﾗｰｾｰﾌﾞﾀﾞｲｱﾛｸﾞは親もﾀﾞｲｱﾛｸﾞなので、それをﾃｽﾄするためにFrameを作り、
//   * そこからDialogを開き、さらにそこからColorSaveDialogを開いてﾃｽﾄする。
//   */
//  public static void main(String args[]) {
//    final Properties prop = new Properties();
//    final JFrame frame = new JFrame();
//    prop.setProperty("bgColor","255,255,255,255");
//    prop.setProperty("fgColor","0,0,0,0");
//    prop.setProperty("lineColor","0,0,0,0");
//    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
//    frame.setLayout(new FlowLayout());
//    JButton button = new JButton("TEST");
//    frame.getContentPane().add(button);
//    button.addActionListener(new ActionListener() {
//      public void actionPerformed(ActionEvent evt) {
//        final JDialog dialog = new JDialog(frame);
//        dialog.setLayout(new FlowLayout());
//        JButton button2 = new JButton("ここから本番");
//        button2.addActionListener(new ActionListener() {
//          public void actionPerformed(ActionEvent ev) {
//            String n = SpecificSaveDialog.showDialog(dialog,"horoscope",prop,"TEST",custom);
//            if(n != null)
//              System.out.println("保存して終了 : " + n);
//            else 
//              System.out.println("保存せず終了");    
//          }
//        });
//        dialog.getContentPane().add(button2);
//        dialog.pack();
//        dialog.setVisible(true);
//      }
//    });
//    frame.pack();
//    frame.setVisible(true);
//  }
//  //ESCでダイアログをクローズする
//  void setKeyListener() {
//    KeyListener l = new KeyAdapter() {
//      public void keyPressed(KeyEvent e) {
//        int code = (int)e.getKeyChar();
//        //クローズボタンの処理でdispose()を実行
//        if(code == KeyEvent.VK_ESCAPE) cancelButton.doClick();
//      }
//    };
//    super.addKeyListener(l);
//    saveButton.addKeyListener(l);
//    cancelButton.addKeyListener(l);
//    jList.addKeyListener(l);
//    nameTextField.addKeyListener(l);
//  }
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JPanel buttonPanel;
        javax.swing.JPanel consolePanel;
        javax.swing.JPanel jnputPanel;
        javax.swing.JLabel nameLabel;

        consolePanel = new javax.swing.JPanel();
        jnputPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        buttonPanel = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        resizeIconPanel1 = new to.tetramorph.widget.ResizeIconPanel();
        jPanel2 = new javax.swing.JPanel();
        scrollPane = new javax.swing.JScrollPane();
        jList = new javax.swing.JList();

        getContentPane().setLayout(new java.awt.BorderLayout(0, 5));

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\u8272\u8a2d\u5b9a\u306e\u4fdd\u5b58");
        setMinimumSize(new java.awt.Dimension(270, 200));
        consolePanel.setLayout(new java.awt.BorderLayout());

        nameLabel.setText("\u8a2d\u5b9a\u540d");
        jnputPanel.add(nameLabel);

        nameTextField.setColumns(14);
        jnputPanel.add(nameTextField);

        consolePanel.add(jnputPanel, java.awt.BorderLayout.NORTH);

        jPanel1.setLayout(new java.awt.BorderLayout());

        saveButton.setMnemonic('Y');
        saveButton.setText("\u4fdd\u5b58(Y)");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(saveButton);

        cancelButton.setMnemonic('N');
        cancelButton.setText("\u4e2d\u6b62(N)");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        jPanel1.add(buttonPanel, java.awt.BorderLayout.CENTER);

        jPanel1.add(resizeIconPanel1, java.awt.BorderLayout.EAST);

        consolePanel.add(jPanel1, java.awt.BorderLayout.SOUTH);

        getContentPane().add(consolePanel, java.awt.BorderLayout.SOUTH);

        jPanel2.setLayout(new java.awt.GridLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 4, 1, 4));
        jList.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 8, 1, 1));
        jList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListMouseClicked(evt);
            }
        });

        scrollPane.setViewportView(jList);

        jPanel2.add(scrollPane);

        getContentPane().add(jPanel2, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents
  //保存ボタンが押された
  private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
      String name = nameTextField.getText().trim();
      if(name.equals("")) {
          JOptionPane.showMessageDialog(this,"設定名を入力してください");
          return;
      }
      if ( ModuleCustomizer.isIllegalName(name) ) {
          JOptionPane.showMessageDialog(this,
              "<html>「" + name + "」は使用できない文字が含まれて" +
              "いるか<br>長すぎるので別の名前を入力してください。</html>",
              "設定名入力エラー",JOptionPane.ERROR_MESSAGE );
          return;
      }
      
      for(int i=0; i<nameVector.size(); i++) {
          if(((String)nameVector.get(i)).equals(name)) {
              String message = "既存の設定に上書きしますか？";
              String title = "設定情報の保存";
              int result = JOptionPane
                  .showConfirmDialog(this,message,title,JOptionPane.YES_NO_OPTION);
              if(result != JOptionPane.YES_OPTION) return;
              break;
          }
      }
      db.setConfigProperties( name, type, prop, tableName );
      confName = name;
      dispose();
  }//GEN-LAST:event_saveButtonActionPerformed
  // 中止ボタンが押された
  private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
      confName = null;
      dispose();
  }//GEN-LAST:event_cancelButtonActionPerformed
  // リストをシングルクリックで選択すると入力フォームに反映
  private void jListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListMouseClicked
      String name = (String)jList.getSelectedValue();
      nameTextField.setText(name);
  }//GEN-LAST:event_jListMouseClicked
  //メニューが選択  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JList jList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField nameTextField;
    private to.tetramorph.widget.ResizeIconPanel resizeIconPanel1;
    private javax.swing.JButton saveButton;
    private javax.swing.JScrollPane scrollPane;
    // End of variables declaration//GEN-END:variables
  
}
