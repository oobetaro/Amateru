/*
 * PlaceDialog.java
 *
 * Created on 2007/12/29, 9:04
 */

package to.tetramorph.starbase;

import java.awt.Component;
import java.awt.Dialog;
import java.awt.Frame;
import java.awt.Window;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import javax.swing.AbstractAction;
import javax.swing.JComponent;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.UIManager;
import to.tetramorph.starbase.lib.Place;
import to.tetramorph.starbase.util.TestConst;
import to.tetramorph.util.ParentWindow;

/**
 * 観測地情報の入力ダイアログ。
 * PlaceChooserで、ユーザが独自の観測地を登録・編集するのに使用している。
 *
 * @author  大澤義鷹
 */
class PlaceDialog extends javax.swing.JDialog {
    // 入力結果のPlace
    private static Place resultPlace;
    // showDialogで初期値として与えられたPlace
    private static Place argPlace;
    
    //親がDialogのときのコンストラクタ
    private PlaceDialog(java.awt.Dialog parent) {
        super(parent, true);
        initComponents();
        init();
    }

    //親がFrameのときのコンストラクタ
    private PlaceDialog(java.awt.Frame parent) {
        super(parent, true);
        initComponents();
        init();
    }
    
    //初期化
    private void init() {
        //観測地入力パネルの地球ボタンはdisenabledにする。
        placePanel.setPlaceButtonEnabled(false);
        //ESCキーでダイアログをクローズできるようにキーを割り当てる
        ParentWindow.setEscCloseOperation(this,new AbstractAction() {
            public void actionPerformed(ActionEvent e) {
                abortButton.doClick();
            }            
        });
    }
    
    /**
     * 観測地入力ダイアログを開く。登録用。
     * @param parent 親のコンポーネント
     */
    public static Place showDialog( Component parent ) {
        return showDialog( parent, null );
    }
    
    /**
     * 初期値の観測地を指定してダイアログを開く。編集用。
     * @param parent 親のコンポーネント
     * @param place 初期値のPlace
     */
    public static Place showDialog( Component parent, Place place ) {
        argPlace = place;
        Window window = ParentWindow.getWindowForComponent(parent);
        final PlaceDialog dialog;
        if ( window instanceof Frame) {
            dialog = new PlaceDialog((Frame)window);
        } else {
            dialog = new PlaceDialog((Dialog)window);
        }
        dialog.setComponentOrientation(window.getComponentOrientation());
        if ( place != null ) {
            dialog.placePanel.setPlace( place );
        }
        dialog.pack();
        dialog.setLocationRelativeTo(window);
        dialog.setVisible(true);
        return dialog.resultPlace;
    }
    
    // エラーメッセージを表示
    private void errorMessage( String msg ) {
        JOptionPane.showMessageDialog(
            getParent(), msg, "観測地入力エラー", JOptionPane.ERROR_MESSAGE );
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        javax.swing.JPanel jPanel1;
        javax.swing.JPanel jPanel2;

        jPanel2 = new javax.swing.JPanel();
        placePanel = new to.tetramorph.starbase.PlacePanel();
        jPanel1 = new javax.swing.JPanel();
        acceptButton = new javax.swing.JButton();
        abortButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("\u89b3\u6e2c\u5730\u306e\u5165\u529b");
        setResizable(false);
        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 1, 8));
        jPanel2.add(placePanel, java.awt.BorderLayout.CENTER);

        acceptButton.setMnemonic('Y');
        acceptButton.setText("\u6c7a\u5b9a(Y)");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        jPanel1.add(acceptButton);

        abortButton.setMnemonic('N');
        abortButton.setText("\u4e2d\u6b62(N)");
        abortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                abortButtonActionPerformed(evt);
            }
        });

        jPanel1.add(abortButton);

        jPanel2.add(jPanel1, java.awt.BorderLayout.SOUTH);

        getContentPane().add(jPanel2);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
    //決定ボタン処理
        if ( ! placePanel.isComplete() ) {
            errorMessage("未入力の項目が存在します。");
            return;
        }
        resultPlace = placePanel.getPlace();
        dispose();
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void abortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_abortButtonActionPerformed
    //中止ボタン処理
        resultPlace = ( argPlace == null ) ? null : argPlace;
        dispose();
    }//GEN-LAST:event_abortButtonActionPerformed
    
    /**
     * テスト。引数なし。
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                UIManager.put("swing.boldMetal", Boolean.FALSE);
                //Place place = showDialog(null,TestConst.getMyPlace());
                Place place = showDialog( null );
                System.out.println(place);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton abortButton;
    private javax.swing.JButton acceptButton;
    private to.tetramorph.starbase.PlacePanel placePanel;
    // End of variables declaration//GEN-END:variables
    
}
