/*
 * PlacePanel.java
 *
 * Created on 2006/07/04, 18:28
 */

package to.tetramorph.starbase;

import java.awt.event.KeyListener;
import to.tetramorph.starbase.formatter.FormatterFactory;
import to.tetramorph.starbase.formatter.LimitedDocument;
import to.tetramorph.starbase.formatter.TopoFormatter;
import to.tetramorph.starbase.formatter.TimeZoneFormatter;
import java.util.GregorianCalendar;
import java.util.TimeZone;
import static java.util.GregorianCalendar.*;
import to.tetramorph.starbase.lib.Place;
import to.tetramorph.tzdialog.TimeZoneDialog;
/**
 * 場所を入力するためのパネル。<br>
 * TimePlacePanelとよく似ているが、TimePlace オブジェクトのget/setを持ってないし、
 * Placeオブジェクトでやりとりするなど、 別物と考えたほうが良いかもしれない。
 */
public class PlacePanel extends javax.swing.JPanel {

    TimeZone timeZone;
    /** Creates new form PlacePanel */
    public PlacePanel() {
        initComponents();
        init();
    }
    private void init() {
        timeZone = TimeZone.getTimeZone(System.getProperty("user.timezone"));
        placenameTextField.setDocument(new LimitedDocument(28));
        lonFTextField.setFormatterFactory(new FormatterFactory(new TopoFormatter(TopoFormatter.LONGITUDE)));
        lonFTextField.setDocument(new LimitedDocument(12));
        latFTextField.setFormatterFactory(new FormatterFactory(new TopoFormatter(TopoFormatter.LATITUDE,lonFTextField)));
        latFTextField.setDocument(new LimitedDocument(12+13));
        timezoneFTextField.setFormatterFactory(new FormatterFactory(new TimeZoneFormatter()));
        timezoneFTextField.setValue(timeZone);
        setDaylightDisplay();
    }
    /**
     * 経度フィールドの値を返す。
     */
    public Double getLongitude() {
        return (Double)lonFTextField.getValue();
    }
    /**
     * 経度フィールドに値をセットする。
     */
    public void setLongitude(Double value) {
        lonFTextField.setValue(value);
    }
    /**
     * 緯度フィールドの値を返す。
     */
    public Double getLatitude() {
        return (Double)latFTextField.getValue();
    }
    /**
     * 緯度フィールドに値をセットする
     */
    public void setLatitude(Double value) {
        latFTextField.setValue(value);
    }
    /**
     * タイムゾーンフィールドの値を返す。
     */
    public TimeZone getTimeZone() {
        return timeZone;
    }
    /**
     * タイムゾーンフィールドに値をセットする。
     */
    public void setTimeZone(TimeZone tz) {
        this.timeZone = tz;
        timezoneFTextField.setValue(tz);
    }
    /**
     * 地名フィールドの値を返す。行頭、行末のスペースは除去される。
     */
    public String getPlaceName() {
        return placenameTextField.getText().trim();
    }
    /**
     * 地名フィールドに値をセットする。
     */
    public void setPlaceName(String placeName) {
        placenameTextField.setText(placeName);
    }
    /**
     * occに含まれる日付、時間、地名、緯度、経度、タイムゾーンを各フィールドにセットする。
     */
    public void setPlace(Place p) {
        setPlaceName( p.getPlaceName() );
        setLatitude( p.getLatitude() );
        setLongitude( p.getLongitude() );
        setTimeZone( p.getTimeZone() );
        setDaylightDisplay();
    }
    /**
     * フィールドに入力された場所情報を返す。
     */
    public Place getPlace() {
        return new Place(getPlaceName(),getLatitude(),getLongitude(),getTimeZone());
    }
    /**
     * すべての項目が入力されていればtrueを返す。
     */
    public boolean isComplete() {
        return getPlaceName() != null && getLatitude() != null &&
            getLongitude() != null && getTimeZone() != null;
    }
    /**
     * このパネルのフィールドが保持しているデータの文字列表現を返す。
     */
    public String toString() {
        return getPlaceName() + "," + getLatitude() + "," + getLongitude() + "," + getTimeZone().getID();
    }
    /**
     * このパネルのフォーカスを受け取る部品すべてにキーリスナを登録
     */
    public void addKeyListener(KeyListener l) {
        latFTextField.addKeyListener(l);
        lonFTextField.addKeyListener(l);
        placeButton.addKeyListener(l);
        placenameTextField.addKeyListener(l);
        zoneButton.addKeyListener(l);
    }
    // 夏時間を考慮したタイムゾーン名の表示だが日付がないので、ゾーン名の表示のみ
    void setDaylightDisplay() {
        timeOffsetLabel.setText(getUTCOffset(timeZone.getRawOffset()));
        zoneNameTextField.setText(timeZone.getDisplayName(false,TimeZone.LONG));
        return;
    }
    String getUTCOffset(long t) {
        String sign = ( t < 0 ) ? "-":"+";
        t = Math.abs(t);
        int sec = (int)(t / 1000L);
        int hour   = sec / 3600;
        int minute = (sec % 3600) / 60;
        return String.format("UTC%s%02d:%02d",sign,hour,minute);
    }
    /**
     * 地球ボタンのEnabledをセットする。
     */
    public void setPlaceButtonEnabled(boolean enabled) {
        placeButton.setEnabled(enabled);
    }
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;
        javax.swing.JLabel latLabel;
        javax.swing.JLabel lonLabel;
        javax.swing.JLabel placeLabel;
        javax.swing.JLabel zoneLabel;

        placenameTextField = new javax.swing.JFormattedTextField();
        latFTextField = new javax.swing.JFormattedTextField();
        lonFTextField = new javax.swing.JFormattedTextField();
        timezoneFTextField = new javax.swing.JFormattedTextField();
        zoneButton = new javax.swing.JButton();
        placeButton = new javax.swing.JButton();
        placeLabel = new javax.swing.JLabel();
        latLabel = new javax.swing.JLabel();
        lonLabel = new javax.swing.JLabel();
        zoneLabel = new javax.swing.JLabel();
        timeOffsetLabel = new javax.swing.JLabel();
        zoneNameTextField = new javax.swing.JTextField();

        setLayout(new java.awt.GridBagLayout());

        placenameTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        add(placenameTextField, gridBagConstraints);

        latFTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        add(latFTextField, gridBagConstraints);

        lonFTextField.setColumns(10);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        add(lonFTextField, gridBagConstraints);

        timezoneFTextField.setColumns(10);
        timezoneFTextField.setEditable(false);
        timezoneFTextField.setFocusable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        add(timezoneFTextField, gridBagConstraints);

        zoneButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/jisaNormal.png")));
        zoneButton.setMnemonic('Z');
        zoneButton.setToolTipText("\u4e16\u754c\u306e\u30bf\u30a4\u30e0\u30be\u30fc\u30f3\u3092\u9078\u629e");
        zoneButton.setBorder(null);
        zoneButton.setBorderPainted(false);
        zoneButton.setContentAreaFilled(false);
        zoneButton.setFocusPainted(false);
        zoneButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        zoneButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/jisaPressed.png")));
        zoneButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/jisaRollover.png")));
        zoneButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zoneButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        add(zoneButton, gridBagConstraints);

        placeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/earthNormal.png")));
        placeButton.setMnemonic('G');
        placeButton.setToolTipText("\u89b3\u6e2c\u5730\u30c7\u30fc\u30bf\u30d9\u30fc\u30b9\u304b\u3089\u9078\u629e");
        placeButton.setBorder(null);
        placeButton.setBorderPainted(false);
        placeButton.setContentAreaFilled(false);
        placeButton.setFocusPainted(false);
        placeButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        placeButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/earthPressed.png")));
        placeButton.setRolloverEnabled(true);
        placeButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/earthRollover.png")));
        placeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                placeButtonActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        add(placeButton, gridBagConstraints);

        placeLabel.setText("\u5730\u540d");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 3);
        add(placeLabel, gridBagConstraints);

        latLabel.setText("\u7def\u5ea6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 3);
        add(latLabel, gridBagConstraints);

        lonLabel.setText("\u7d4c\u5ea6");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 3);
        add(lonLabel, gridBagConstraints);

        zoneLabel.setText("\u6642\u5dee");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 3);
        add(zoneLabel, gridBagConstraints);

        timeOffsetLabel.setText(" ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        add(timeOffsetLabel, gridBagConstraints);

        zoneNameTextField.setColumns(10);
        zoneNameTextField.setEditable(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(1, 0, 1, 0);
        add(zoneNameTextField, gridBagConstraints);

    }// </editor-fold>//GEN-END:initComponents

    private void placeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_placeButtonActionPerformed
    Place place = PlaceChooser.showDialog(this);
    if(place == null) return; //地名選択中止
    setPlaceName(place.getPlaceName());
    setLatitude(place.getLatitude());
    setLongitude(place.getLongitude());
    setTimeZone(place.getTimeZone());
    }//GEN-LAST:event_placeButtonActionPerformed

    private void zoneButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zoneButtonActionPerformed
    TimeZone tz = TimeZoneDialog.showDialog(this);
    if(tz == null) return;
    setTimeZone(tz);
    setDaylightDisplay();
    }//GEN-LAST:event_zoneButtonActionPerformed
  
  
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField latFTextField;
    private javax.swing.JFormattedTextField lonFTextField;
    private javax.swing.JButton placeButton;
    private javax.swing.JFormattedTextField placenameTextField;
    private javax.swing.JLabel timeOffsetLabel;
    private javax.swing.JFormattedTextField timezoneFTextField;
    private javax.swing.JButton zoneButton;
    private javax.swing.JTextField zoneNameTextField;
    // End of variables declaration//GEN-END:variables
  
}
