/*
 * NatalInputPanel.java
 *
 * Created on 2006/07/05, 1:18
 */

package to.tetramorph.starbase;

import to.tetramorph.starbase.formatter.LimitedDocument;
import javax.swing.JOptionPane;
import to.tetramorph.starbase.lib.Natal;

/**
 * DataInputDialogにはめこんでつかう部品で、これはネイタルチャートのデータ入力用。
 * 他にもコンポジットやイベントチャート用が用意される予定。
 * かならず抽象クラスのDataTypePanelをextendsしてgetNatalとsetNatalを
 * オーバーライドしていなければならない。
 */
class NatalInputPanel extends AbstractNatalInputPanel {
  private Natal natal;
  /**
   * オブジェクトを作成する。
   */
  public NatalInputPanel() {
    initComponents();
    init();
    setFocus();
  }
  //名前、なまえ、メモのTextFieldに文字数制限をかける。
  private void init() {
    nameTextField.setDocument(new LimitedDocument(28));
    kanaTextField.setDocument(new LimitedDocument(28));
    memoTextField.setDocument(new LimitedDocument(28));
  }
  public void setFocus() {
    nameTextField.requestFocusInWindow();
  }
  /**
   * このフォームに入力されたデータをNatalオブジェクトとして返す。
   * なお入力フォームに存在しないパラメター(ヒストリーやノート)は、未登録のまま
   * で返される。またNatalのChartTypeかならずNATALにセットされている。
   * @return　Natalオブジェクト
   */
  public Natal getNatal() {
    if(natal == null) natal = new Natal();
    natal.setChartType(Natal.NATAL);
    natal.setName(nameTextField.getText().trim());
    natal.setKana(kanaTextField.getText().trim());
    natal.setMemo(memoTextField.getText().trim());
    natal.setJob(jobTextField.getText().trim());
    timePlacePanel.getTimePlace(natal);
    String gender = (String)genderComboBox.getSelectedItem();
    if(gender.equals("男")) natal.setGender(Natal.MALE);
    else if(gender.equals("女")) natal.setGender(Natal.FEMALE);
    else natal.setGender(Natal.NONE);
    return natal;
  }
  /**
   * 「名前、よみがな、性別、職業、メモ」と、日付、時刻、地名、緯度、経度、
   * タイムゾーンを各入力フィールドにセットする。
   */
  public void setNatal(Natal natal) {
    this.natal = natal;
    nameTextField.setText(natal.getName());
    kanaTextField.setText(natal.getKana());
    jobTextField.setText(natal.getJob());
    memoTextField.setText(natal.getMemo());
    genderComboBox.setSelectedIndex(natal.getGender());
    timePlacePanel.setTimePlace(natal);
  }
  /**
   * このDataTypePanelは少なくとも「名前」「日付」が満たされていれば登録しても
   * 良いとみなしtrueを返す。満たされていないときはエラーメッセージをダイアログ
   * で表示したのちfalseを返す。
   */
  public boolean isCompletion() {
    String name = nameTextField.getText();
    if(name == null) name = "";
    if(timePlacePanel.getDate() == null || name.equals("")) {
      JOptionPane.showMessageDialog(this,"名前と日付は両方とも入力が必要です。"
        ,"ネイタルデータの入力",JOptionPane.ERROR_MESSAGE);
      return false;
    }
    return true;
  }
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        timePlacePanel = new to.tetramorph.starbase.TimePlacePanel();
        parsonPanel = new javax.swing.JPanel();
        javax.swing.JLabel nameLabel = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        javax.swing.JLabel kanaLabel = new javax.swing.JLabel();
        kanaTextField = new javax.swing.JTextField();
        javax.swing.JLabel memoLabel = new javax.swing.JLabel();
        memoTextField = new javax.swing.JTextField();
        javax.swing.JLabel genderLabel = new javax.swing.JLabel();
        genderComboBox = new javax.swing.JComboBox();
        javax.swing.JLabel jobLabel = new javax.swing.JLabel();
        jobTextField = new javax.swing.JTextField();
        jobSelectButton = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createEmptyBorder(8, 8, 8, 1));
        setMinimumSize(new java.awt.Dimension(420, 150));
        setName("ネイタル"); // NOI18N
        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(timePlacePanel, gridBagConstraints);

        parsonPanel.setLayout(new java.awt.GridBagLayout());

        nameLabel.setText("名前");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        parsonPanel.add(nameLabel, gridBagConstraints);

        nameTextField.setColumns(12);
        parsonPanel.add(nameTextField, new java.awt.GridBagConstraints());

        kanaLabel.setText("なまえ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        parsonPanel.add(kanaLabel, gridBagConstraints);

        kanaTextField.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        parsonPanel.add(kanaTextField, gridBagConstraints);

        memoLabel.setText("メモ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        parsonPanel.add(memoLabel, gridBagConstraints);

        memoTextField.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        parsonPanel.add(memoTextField, gridBagConstraints);

        genderLabel.setText("性別");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        parsonPanel.add(genderLabel, gridBagConstraints);

        genderComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "無", "男", "女" }));
        genderComboBox.setPreferredSize(new java.awt.Dimension(50, 19));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        parsonPanel.add(genderComboBox, gridBagConstraints);

        jobLabel.setText("職業");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 3);
        parsonPanel.add(jobLabel, gridBagConstraints);

        jobTextField.setColumns(12);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        parsonPanel.add(jobTextField, gridBagConstraints);

        jobSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/images/job.png"))); // NOI18N
        jobSelectButton.setMnemonic('J');
        jobSelectButton.setToolTipText("職業リストから選択");
        jobSelectButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jobSelectButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jobSelectButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        parsonPanel.add(jobSelectButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        add(parsonPanel, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

  private void jobSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jobSelectButtonActionPerformed
    String job = JobSelectDialog.showDialog(this);
    if(job != null) jobTextField.setText(job);
  }//GEN-LAST:event_jobSelectButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox genderComboBox;
    private javax.swing.JButton jobSelectButton;
    private javax.swing.JTextField jobTextField;
    private javax.swing.JTextField kanaTextField;
    private javax.swing.JTextField memoTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JPanel parsonPanel;
    private to.tetramorph.starbase.TimePlacePanel timePlacePanel;
    // End of variables declaration//GEN-END:variables

}
