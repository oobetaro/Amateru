/*
 * SplitTest.java
 *
 * Created on 2007/10/26, 0:27
 */

package multisplit;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.BorderFactory;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.border.Border;

/**
 * NetBeansのような多重分割パネルを実現する。
 * 複数のパネルを望んだ場所に挿入したり削除したりする。
 * @author  大澤義鷹
 */
public class SplitTest2 extends javax.swing.JFrame {
  int count;
  SplitNode rootNode = new SplitNode();
  JButton [] buttons;
  
  /** Creates new form SplitTest */

  public SplitTest2() {
    initComponents();
    add( rootNode, BorderLayout.CENTER ); // SplitPaneをレイアウトにセット
    pack();
    this.setLocationRelativeTo(null);
    
    buttons = new JButton[] { topButton,leftButton,bottomButton,rightButton };
    ActionListener al = new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        for(int i=0; i<buttons.length; i++) {
          if(buttons[i] == evt.getSource()) {
            TreeOfLifePanel tree = new TreeOfLifePanel();
            Border border = BorderFactory.createLineBorder(Color.BLACK);
            //createBevelBorder(BevelBorder.LOWERED);
            tree.setBorder( border );
            tree.setNumber( ++count );
            if(count == 1) {
              comboBox.removeAllItems();
              rootNode.addComponent(tree,i,null);
              System.out.println(tree + "を" + evt.getActionCommand() + " 挿入");
              comboBox.setEnabled(true);
              removeButton.setEnabled(true);
            } else {
              TreeOfLifePanel target = (TreeOfLifePanel)comboBox.getSelectedItem();
              SplitNode n = rootNode.findNode( target );
              if(n == null) 
                JOptionPane.showMessageDialog( 
                      SplitTest2.this,  target.toString() + "が見つからない" );
              else {
                System.out.println( target + "に" + tree + "を" + 
                                    evt.getActionCommand() + "挿入" );
                n.addComponent(tree,i,target);
              }
            }
            comboBox.addItem(tree);
            validate();
            break;
          }
        }
      }
    };
    for(JButton b: buttons) b.addActionListener( al );
    reset();
  }
  


  private void reset() {
    comboBox.removeAllItems();
    comboBox.addItem("選択");
    rootNode.removeAll();
    count = 0;
    comboBox.setEnabled(false);
    removeButton.setEnabled(false);
    System.out.println("リセット");
  }
  
  private void remove() {
    TreeOfLifePanel p = (TreeOfLifePanel)comboBox.getSelectedItem();
    System.out.println(p + "を削除");
    rootNode.removeComponent(p);
    comboBox.removeItem(p);
    if ( comboBox.getItemCount() == 0 ) reset();
  }
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc=" Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    panel = new javax.swing.JPanel();
    topButton = new javax.swing.JButton();
    leftButton = new javax.swing.JButton();
    bottomButton = new javax.swing.JButton();
    rightButton = new javax.swing.JButton();
    comboBox = new javax.swing.JComboBox();
    removeButton = new javax.swing.JButton();
    resetButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("JSplitPane\u3092\u5165\u308c\u5b50\u306b\u3059\u308b\u5b9f\u9a13");
    setMinimumSize(new java.awt.Dimension(600, 600));
    panel.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEFT));

    topButton.setText("Top");
    panel.add(topButton);

    leftButton.setText("Left");
    panel.add(leftButton);

    bottomButton.setText("Buttom");
    panel.add(bottomButton);

    rightButton.setText("Right");
    panel.add(rightButton);

    comboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
    panel.add(comboBox);

    removeButton.setText("Remove");
    removeButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        removeButtonActionPerformed(evt);
      }
    });

    panel.add(removeButton);

    resetButton.setText("Reset");
    resetButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        resetButtonActionPerformed(evt);
      }
    });

    panel.add(resetButton);

    getContentPane().add(panel, java.awt.BorderLayout.NORTH);

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void removeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeButtonActionPerformed
    remove();
  }//GEN-LAST:event_removeButtonActionPerformed

  private void resetButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetButtonActionPerformed
    reset();
  }//GEN-LAST:event_resetButtonActionPerformed
  
  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new SplitTest2().setVisible(true);
      }
    });
  }
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton bottomButton;
  private javax.swing.JComboBox comboBox;
  private javax.swing.JButton leftButton;
  private javax.swing.JPanel panel;
  private javax.swing.JButton removeButton;
  private javax.swing.JButton resetButton;
  private javax.swing.JButton rightButton;
  private javax.swing.JButton topButton;
  // End of variables declaration//GEN-END:variables
  
}
