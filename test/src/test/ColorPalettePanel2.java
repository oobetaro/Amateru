/*
 * ColorPalettePanel.java
 *
 * Created on 2007/01/04, 9:30
 */

package to.tetramorph.starbase.widget;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.BorderFactory;
import javax.swing.JColorChooser;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.border.Border;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import to.tetramorph.util.ColorCalcurator;

/**
 * 色を選択するためのパネル。JColorChooserのパレットのみを取り出して使う手もある
 * のだが、サイズ的に問題があったので専用に用意した。
 */
public class ColorPalettePanel2 extends javax.swing.JPanel {
  private Map<String,JLabel> colorMap = new HashMap<String,JLabel>();
  private JLabel preLabel = null;
  private ChangeListener changeListener = null;
  private JLabel [] customs;
  private final Border emptyBorder = 
    BorderFactory.createLineBorder(getBackground(),2);
  /** オブジェクトを作成する */
  public ColorPalettePanel2() {
    initComponents();
    init();
  }
  private void init() {
    Color [][] table = ColorCalcurator.getColorTable();
    Dimension size = new Dimension(12,12);
    for(int y=8; y>=0; y--) {
      for(int x=0; x<=12; x++) {
        JLabel label = new JLabel();
        label.setPreferredSize(size);
        label.setOpaque(true);
        label.setBackground(table[x][y]);
        label.setBorder( emptyBorder );
        label.addMouseListener(new MouseHandler(x,y));
        palettePanel.add(label);
        colorMap.put(x + "," + y,label);
      }
    }
    customs = new JLabel[] { null,customLabel1,customLabel2,customLabel3,
      customLabel4,customLabel5 };
    for(int i=1; i<customs.length; i++) {
      customs[i].addMouseListener(new MouseHandler(i,-1));
      colorMap.put(i+",-1",customs[i]);
    }
  }
  // アスペクトラベルがクリックされても、選択できるようにするためのマウスハンドラ
  class MouseHandler extends MouseAdapter {
    int x,y;
    
    // オブジェクト作成時にシリアル番号を受け取る
    MouseHandler(int x,int y) {
      this.x = x;
      this.y = y;
    }
    // ｱｽﾍﾟｸﾄﾗﾍﾞﾙ上でﾏｳｽｸﾘｯｸが発生したら、ﾗｼﾞｵﾎﾞﾀﾝ選択
    public void mouseReleased(MouseEvent evt) { 
      JLabel label = colorMap.get(x+","+y);
      if(preLabel != null) {
        preLabel.setBorder( emptyBorder );
      }
      Color c = (y <= 2) ? Color.RED : Color.BLACK;
      label.setBorder(BorderFactory.createLineBorder(c,2));
      preLabel = label;
      if(changeListener != null) {
        ChangeEvent event = new ChangeEvent(ColorPalettePanel2.this);
        changeListener.stateChanged(event);
      }
      Color bg = label.getBackground();
      colorCodeLabel.setText(String.format("カラー R=%d,G=%d,B=%d",
        bg.getRed(),bg.getGreen(),bg.getBlue())); 
    }
  }
  /**
   * 選択されている色を返す。
   */
  public Color getSelectedColor() {
    return preLabel.getBackground();
  }
  /**
   * 色選択されたときのリスナを登録する。1個しか登録できない。
   */
  public void setChangeListener(ChangeListener l) {
    changeListener = l;
  }
  //テスト
  static void createAndShowGUI() {
    if(UIManager.getLookAndFeel().getName().equals("Metal")) {
      UIManager.put("swing.boldMetal", Boolean.FALSE);
      JDialog.setDefaultLookAndFeelDecorated(true);
      JFrame.setDefaultLookAndFeelDecorated(true);
      Toolkit.getDefaultToolkit().setDynamicLayout(true);
    }
    JFrame frame = new JFrame();
    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
    frame.setTitle("サインカラー設定");
    ColorPalettePanel2 panel = new ColorPalettePanel2();
    frame.getContentPane().add(panel);
    frame.pack();
    frame.setVisible(true);
  }
  /** テスト */
  public static void main(String [] args) {
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        createAndShowGUI();
      }
    });    
  }   
  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    palettePanel = new javax.swing.JPanel();
    customPanel = new javax.swing.JPanel();
    customLabel1 = new javax.swing.JLabel();
    customLabel2 = new javax.swing.JLabel();
    customLabel3 = new javax.swing.JLabel();
    customLabel4 = new javax.swing.JLabel();
    customLabel5 = new javax.swing.JLabel();
    jButton1 = new javax.swing.JButton();
    colorCodeLabel = new javax.swing.JLabel();

    setLayout(new java.awt.GridBagLayout());

    palettePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("\u57fa\u672c\u8272"));
    palettePanel.setLayout(new java.awt.GridLayout(9, 13));
    add(palettePanel, new java.awt.GridBagConstraints());

    customPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("\u30ab\u30b9\u30bf\u30e0"));
    customPanel.setLayout(new java.awt.GridBagLayout());

    customLabel1.setBackground(new java.awt.Color(255, 255, 255));
    customLabel1.setOpaque(true);
    customLabel1.setPreferredSize(new java.awt.Dimension(11, 11));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
    customPanel.add(customLabel1, gridBagConstraints);

    customLabel2.setBackground(new java.awt.Color(255, 255, 255));
    customLabel2.setOpaque(true);
    customLabel2.setPreferredSize(new java.awt.Dimension(11, 11));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
    customPanel.add(customLabel2, gridBagConstraints);

    customLabel3.setBackground(new java.awt.Color(255, 255, 255));
    customLabel3.setOpaque(true);
    customLabel3.setPreferredSize(new java.awt.Dimension(11, 11));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
    customPanel.add(customLabel3, gridBagConstraints);

    customLabel4.setBackground(new java.awt.Color(255, 255, 255));
    customLabel4.setOpaque(true);
    customLabel4.setPreferredSize(new java.awt.Dimension(11, 11));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
    customPanel.add(customLabel4, gridBagConstraints);

    customLabel5.setBackground(new java.awt.Color(255, 255, 255));
    customLabel5.setOpaque(true);
    customLabel5.setPreferredSize(new java.awt.Dimension(11, 11));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 4);
    customPanel.add(customLabel5, gridBagConstraints);

    jButton1.setText("\u8272\u306e\u4f5c\u6210");
    jButton1.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButton1ActionPerformed(evt);
      }
    });
    customPanel.add(jButton1, new java.awt.GridBagConstraints());

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
    add(customPanel, gridBagConstraints);

    colorCodeLabel.setText("              ");
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
    add(colorCodeLabel, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents
  //色の作成ボタン
  private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
    boolean isCustom = false;
    for(int i=1; i<customs.length; i++) {
      if(customs[i] == preLabel) { isCustom = true; break; }
    }
    if(isCustom) {
      Color col = JColorChooser.showDialog(this,"色の作成",preLabel.getBackground());
      preLabel.setBackground(col);
    } else {
      JOptionPane.showMessageDialog(this,"左のマス目を選択してください");
    }
  }//GEN-LAST:event_jButton1ActionPerformed
  
  
  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JLabel colorCodeLabel;
  private javax.swing.JLabel customLabel1;
  private javax.swing.JLabel customLabel2;
  private javax.swing.JLabel customLabel3;
  private javax.swing.JLabel customLabel4;
  private javax.swing.JLabel customLabel5;
  private javax.swing.JPanel customPanel;
  private javax.swing.JButton jButton1;
  private javax.swing.JPanel palettePanel;
  // End of variables declaration//GEN-END:variables
  
}
