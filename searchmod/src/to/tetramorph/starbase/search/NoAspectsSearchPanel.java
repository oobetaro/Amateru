/*
 * NoAspectsSearchPanel.java
 *
 * Created on 2008/09/19, 2:41
 */

package to.tetramorph.starbase.search;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.SpinnerNumberModel;
import to.tetramorph.starbase.lib.SearchOption;
import to.tetramorph.starbase.module.SearchModulePanel;
import to.tetramorph.util.Preference;
import static to.tetramorph.starbase.lib.Const.*;
import to.tetramorph.starbase.lib.Natal;
import to.tetramorph.starbase.lib.SearchResult;

/**
 * ノーアスペクトのチャートを検索する。
 * @author  大澤義鷹
 */
public class NoAspectsSearchPanel extends SearchModulePanel {
    private Preference configPref;
    private final Integer [] bodys = new Integer[] { 
        SUN, MOON, MERCURY, VENUS, MARS, JUPITER, SATURN,
        URANUS, NEPTUNE, PLUTO 
    };
    private final Integer [] classicsBodys = new Integer[] { 
        SUN, MOON, MERCURY, VENUS, MARS, JUPITER, SATURN
    };
    
    /** Creates new form NoAspectsSearchPanel */
    public NoAspectsSearchPanel() {
        initComponents();
        planetComboBox1.setItems( bodys );
        orbSpinner1.setModel( new SpinnerNumberModel( 4.0, 0., 8., 0.5 ) );
        buttonGroup1.add( systemRadioButton1 );
        buttonGroup1.add( systemRadioButton2 );
        ActionListener al = new ActionListener() {
            public void actionPerformed( ActionEvent evt ) {                
                Integer [] items = ( evt.getSource() == systemRadioButton1 ) ? 
                                   bodys            :         classicsBodys;
                planetComboBox1.setItems( items );
            }
        };
        systemRadioButton1.addActionListener( al );
        systemRadioButton2.addActionListener( al );
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonGroup1 = new javax.swing.ButtonGroup();
        planetComboBox1 = new to.tetramorph.starbase.widget.PlanetComboBox();
        jLabel1 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel2 = new javax.swing.JPanel();
        systemRadioButton1 = new javax.swing.JRadioButton();
        systemRadioButton2 = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        orbSpinner1 = new javax.swing.JSpinner();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        javax.swing.JLabel jLabel4 = new javax.swing.JLabel();

        setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(planetComboBox1, gridBagConstraints);

        jLabel1.setText("がノーアスペクトのデータを探す。");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        add(jLabel1, gridBagConstraints);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        systemRadioButton1.setSelected(true);
        systemRadioButton1.setText("モダン　（十惑星で検査）");
        systemRadioButton1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        systemRadioButton1.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 0);
        jPanel2.add(systemRadioButton1, gridBagConstraints);

        systemRadioButton2.setText("古典　　（七惑星で検査）");
        systemRadioButton2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        systemRadioButton2.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        jPanel2.add(systemRadioButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 4, 0);
        add(jPanel2, gridBagConstraints);

        jLabel2.setText("メジャーアスペクトのみで判定。");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        add(jLabel2, gridBagConstraints);

        jPanel1.setLayout(new java.awt.GridBagLayout());
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        jPanel1.add(orbSpinner1, gridBagConstraints);

        jLabel3.setText("オーブ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
        jPanel1.add(jLabel3, gridBagConstraints);

        jLabel4.setText("度");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
        jPanel1.add(jLabel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(4, 0, 0, 0);
        add(jPanel1, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JSpinner orbSpinner1;
    private to.tetramorph.starbase.widget.PlanetComboBox planetComboBox1;
    private javax.swing.JRadioButton systemRadioButton1;
    private javax.swing.JRadioButton systemRadioButton2;
    // End of variables declaration//GEN-END:variables

    public void init(Preference configData) {
        this.configPref = configPref;
    }

    public boolean begin() {
        double orb = (Double)orbSpinner1.getValue();
        if ( orb == 0d ) {
            JOptionPane.showMessageDialog( this,
                "オーブは0度以上でなければなりません",
                "アスペクト検索のエラー",
                JOptionPane.ERROR_MESSAGE );
            return false;
        }
        return true;
    }

    public SearchResult search( SearchOption option ) {
        Integer [] planets = systemRadioButton1.isSelected() ?
                   bodys      :      classicsBodys;
        int sel_id = planetComboBox1.getSelectedBody();
        String targetName = PLANET_NAMES_EN[ sel_id ];
        String [] temp = new String[10];
        for ( int i = 0; i < temp.length; i++ ) {
            if ( i >= planets.length ) {
                temp[i] = "NULL";
            } else {
                int id = planets[i];
                temp[i] = PLANET_NAMES_EN[ id ];
            }
        }
        String top = temp[0];
        temp[0] = temp[ sel_id ];
        temp[ sel_id ] = top;
        
        StringBuilder sb = new StringBuilder();
        sb.append( "SELECT ");
	sb.append(    "TREEPATH.PATH, OCCASION.*, PLANETS_LONGITUDE.*");
//        for ( int id : planets ) {
//            sb.append( "PLANETS_LONGITUDE." );
//            sb.append( PLANET_NAMES_EN[ id ] );
//            sb.append( "," );
//        }
//        sb.deleteCharAt( sb.length() - 1 );
        sb.append( " FROM" );
        sb.append(      " OCCASION, PLANETS_LONGITUDE, TREEPATH");
        sb.append( " WHERE");
        sb.append(      " OCCASION.JDAY = PLANETS_LONGITUDE.JDAY AND");
        sb.append(      " TREEPATH.ID = OCCASION.ID AND");
        sb.append(      " NOASPECT( ");
        for ( int i = 0; i < temp.length; i++ ) {
            sb.append( temp[i] );
            sb.append(",");
        }
        double orb = (Double)orbSpinner1.getValue();
        sb.append( orb );
        sb.append( ") AND " );
        sb.append( option.getExpression() );
        //System.out.println( sb.toString() );
        String title = String.format(
            "%sがノーアスペクト(オーブ%2.1f度) ",
            PLANET_NAMES[sel_id],orb );
        String tabName = String.format( "%sノーアス",PLANET_NAMES[sel_id] );

        PreparedStatement ps = null;
        ResultSet rs = null;
        try {
            Connection con = option.getConnection();
            ps = con.prepareStatement( sb.toString() );
            System.out.println("SQL: ");
            System.out.println( ps.toString() );
            rs = ps.executeQuery();
            List<Natal> list = new ArrayList<Natal>();
            while ( rs.next() ) {
                Natal o = new Natal();
                o.setParams(rs);
                o.setPath( rs.getString("PATH") );
                list.add(o);
            }
//            option.getResultReceiver().write( new SearchResult(
//                                                        list,
//                                                        tabName,
//                                                        title,
//                                                        option.getCurrentPath(),
//                                                        toString()));
            return new SearchResult(list,
                                      tabName,
                                      title,
                                      option.getCurrentPath(),
                                      toString());
        } catch ( SQLException e ) {
            e.printStackTrace();
            System.out.println("SQL: ");
            System.out.println(ps.toString());
        } finally {
            try {
                rs.close();
                ps.close();
            } catch ( Exception e ) { }
        }
        return null;
    }

    public String toString() {
        return "ノーアス検索";
    }
    
}
